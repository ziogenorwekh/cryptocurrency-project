services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-server
    ports:
      - "29092:29092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      CLUSTER_ID: my-cluster-id-123
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      retries: 10

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - my-network

  kafka-init:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-initializer
    command: >
      bash -c "
      sleep 15 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic limit-order-command-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic reservation-order-command-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic market-order-command-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic predicated-trade-event-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic trade-command-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic deposit-withdrawal-command-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic deposit-withdrawal-event-topic --partitions 1 --replication-factor 1
      kafka-topics --bootstrap-server kafka:9092 --create --topic coupon-command-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic user-command-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic cancel-order-command-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic cancel-order-event-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic crypto-command-topic --partitions 1 --replication-factor 1
      kafka-topics --bootstrap-server kafka:9092 --create --topic user-balance-command-topic --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --create --topic user-balance-event-topic --partitions 1 --replication-factor 1
      "
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - my-network

networks:
  my-network:
    driver: bridge